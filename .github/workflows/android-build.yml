name: Build Android APK with Buildozer

on:
  push:
  pull_request:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip git unzip openjdk-17-jdk tar wget curl zip

      - name: Upgrade pip and install Python packages
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          pip install buildozer cython kivy numpy scikit-learn

      - name: Setup Android SDK with only build-tools 33.0.0
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          curl -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip -q cmdline-tools.zip
          rm cmdline-tools.zip
          mv cmdline-tools latest

          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH

          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses

          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.0"

      - name: Set environment variables
        run: |
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

      - name: Build APK with Buildozer
        run: |
          python3 -m buildozer android debug

      - name: List APKs
        run: ls -lh bin || true

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: slotprediksnapp-apk
          path: bin/*.apk
